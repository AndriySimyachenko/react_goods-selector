{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","goodToSelect","good","includes","setState","prevState","filter","product","listView","goods","length","slice","join","this","className","map","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAACH,EAAgB,K,EAGlCI,aAAe,SAACC,GACd,IAAQF,EAAkB,EAAKD,MAAvBC,cAEJA,EAAcG,SAASD,GACzB,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAeK,EAAUL,cACtBM,QAAO,SAAAC,GAAO,OAAIA,IAAYL,SAGnC,EAAKE,SAAS,CAAEJ,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,O,EAItDM,SAAW,SAACC,GACV,OAAqB,IAAjBA,EAAMC,OACD,oBAGY,IAAjBD,EAAMC,OACF,GAAN,OAAUD,EAAM,GAAhB,gBAGI,GAAN,OAAUA,EAAME,MAAM,GAAI,GAAGC,KAAK,MAAlC,gBAA+CH,EAAMA,EAAMC,OAAS,GAApE,kB,4CAGF,WAAU,IAAD,OACCV,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKL,SAASR,KAEjB,oBAAIc,UAAU,YAAd,SACGjB,EAAgBkB,KAAI,SAAAb,GAAI,OAEvB,sBAAKY,UAAU,YAAf,UACE,6BACGZ,IAEH,wBACEc,KAAK,SACLF,UAAU,SACVG,QAAS,WACP,EAAKhB,aAAaC,IAJtB,SAOIF,EAAcG,SAASD,GAAmB,SAAX,aAXLA,QAkBV,IAAzBF,EAAcU,QAEX,wBACEM,KAAK,SACLF,UAAU,sBACVG,QAAS,WACP,EAAKb,SAAS,CAAEJ,cAAe,MAJnC,0B,GA7DMkB,IAAMC,WA4ETrB,IC7FfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c05ea56f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [goodsFromServer[8]],\n  };\n\n  goodToSelect = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(good)) {\n      this.setState(prevState => ({\n        selectedGoods: prevState.selectedGoods\n          .filter(product => product !== good),\n      }));\n    } else {\n      this.setState({ selectedGoods: [...selectedGoods, good] });\n    }\n  };\n\n  listView = (goods: string[]) => {\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    return `${goods.slice(0, -1).join(', ')} and ${goods[goods.length - 1]} are selected`;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {this.listView(selectedGoods)}\n        </h1>\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n\n            <div className=\"App__item\" key={good}>\n              <li>\n                {good}\n              </li>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => {\n                  this.goodToSelect(good);\n                }}\n              >\n                {!selectedGoods.includes(good) ? 'Select' : 'Remove'}\n              </button>\n            </div>\n\n          ))}\n        </ul>\n\n        {selectedGoods.length !== 0\n          && (\n            <button\n              type=\"button\"\n              className=\"button button-clear\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              Clear\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}